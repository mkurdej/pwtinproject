Super tajne wiadomosci, ktore chcemy przeslac tak zeby nikt nie widzial ze cos wyslalismy... 
Np. kawalek naszego kodu:

SIP_Agent::SIP_Agent(string localaddr) : mutex(0), wait(0) {

    registered = false;
    connectionEstablished = false;
    sleepTime = 1.0;

    cout << "Creating socket...";
    sock = socket( AF_INET, SOCK_DGRAM, 0);

    if (sock == -1)
        throw runtime_error("Can't create UDP socket!");

    cout << "OK, assigned socket number is " << sock << endl;

    cout << "Binding to address...";
    address.sin_family = AF_INET;
    address.sin_addr.s_addr = inet_addr(localaddr.c_str());  // INADDR_ANY;
    address.sin_port = 0;

    if (bind(sock, (sockaddr *) &address, sizeof(address)) == -1)
        throw runtime_error("Can't bind to address!");

    cout << "OK, address: ";

    int length = sizeof( address );
    if (getsockname( sock, (sockaddr *) &address, (socklen_t *) &length) == -1)
        throw runtime_error("Can't get assigned address!");

    cout << inet_ntoa( address.sin_addr ) << ":" << ntohs( address.sin_port ) << endl;

    killThread = false;
    pthread_create(&thread, NULL, SIP_AgentThread, (void *) this );
    mutex.V();

}

SIP_Agent::~SIP_Agent() {

    mutex.P();
    killThread = true;
    mutex.V();

    pthread_join( thread, (void **)NULL );

    cout << "Closing socket...";
    if (close(sock) != 0)
        throw runtime_error("Can't close socket!");
    cout << "OK" << endl;
}

string SIP_Agent::generateCallID() {
    string callid = "";

    for (int i = 0; i < 10; ++i)
        callid += toString( rand() % 10 );

    return callid + "@" + proxy;
}

void SIP_Agent::generateFromTag() {
    tag = "";

    for (int i = 0; i < 10; ++i) {
        int v = rand() % 16;
        if (v < 10)
            tag += toString( v );
        else
            tag += toString( (char) (((int) 'a') + (v - 10)) );
    }

}

string SIP_Agent::generateBranch() {
    string result = "";
    for (int i = 0; i < 20; ++i)
        result += toString( rand() % 10 );
    return result;
}

string SIP_Agent::addressString() {
    return string(inet_ntoa( address.sin_addr )) + ":" + toString(ntohs( address.sin_port ));
}

void SIP_Agent::sendMessage(SIP_Message &m, string address, unsigned short port) {
    string s = m.toStream();

    sockaddr_in r;

    r.sin_family = AF_INET;
    r.sin_addr.s_addr = inet_addr(address.c_str());
    r.sin_port = htons( port );

    sendto(sock, s.c_str(), s.length(), 0, (sockaddr *) &r, sizeof( r ));

    /*	cout << "-----   SIP Message sent   -----" << endl;
    	cout << m;
    	cout << "--------------------------------" << endl;*/
    cout << "SIP: >> " << m.rline << endl;
}
